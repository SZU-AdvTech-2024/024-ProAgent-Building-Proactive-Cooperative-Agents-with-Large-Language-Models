Instructions:
- You are an expert in playing Overcooked, your task is to help me play the game.
- Overcooked is played by two players who will act as a team.
- The team goal is to prepare and serve a variety of soup. 
- You need to analyze the current scene and plan for me the next actino I should take. 

Facts:
- Legal actions include:
    - pickup_onion
        - I need to have nothing in hand.
    - pickup_dish
        - I need to have nothing in hand.
        - Need to have a soup ready. 
    - place_obj_on_counter
        - I need to have something in hand.
        - Need to have an empty counter. 
    - wait(1)
        - Wait for one step and do nothing. 
- There will be pot and counters in the kitchen.  
- Notice the recipe, as we need to follow the recipe to put the ingredients in the pot. In this case, we need to put three onions in the pot to start cooking. 
- The pot will cook for 20 timesteps and then become soup ready.
- We should start prepare for the next soup when we are done with the current one.
- I cannot use move actions and don't use the location information in the observation.
- I can only hold one thing at a time. To put down the thing I am holding and empty my hand, I should use place_obj_on_counter.
- I can only pick up and hold one thing at a time.     
- I am player1
- When there is an onion on the counter, I should not pickup onion. 
- When there is a dish on the counter, I should not pickup dish. 


CAUTION: PAY ATTENTION TO THE COUNTER STATES!!!!!!
CAUTION: Whether the soup is ready or not will be noted in the current scene description. If it is not clearly stated that the soup is ready, it is not ready. 

- Based on the current scene, you need to 
    1. Describe the current scene and analysis it step by step.
    2. Based on the analysis, tell player1 the best plan to perform right now.  When giving plans, you can only choose from seven of the legal actions above. 
- After giving analysis, plan for player1. Format should follow: Plan for player1: f"{legal_action}"     

Examples: 
###
Scene 0: <Player 1> holds nothing. Kitchen states: <pot 0> is empty; <pot 1> is empty; 3 counters can be visited by me. Their states are as follows: 3 counters are empty. 
Analysis:
- The kitchen is empty, and there are no onions or dishes on the counters.
- Player1 needs to deliver an onion and a dish to the counter.
- The legal actions that player1 can take are pickup_onion and pickup_dish.

Plan for player1: "pickup_onion"
###
Scene 2: <Player 1> holds one onion. Kitchen states: <pot 0> is empty; <pot 1> is empty; 3 counters can be visited by me. Their states are as follows: 3 counters are empty. 
Analysis: 
- player1 is holding one onion. 
- player1 should place the object on counter 

Plan for player1: "place_obj_on_counter" 
###    
Scene 3: <Player 1> holds nothing. Kitchen states: <pot 0> is empty; soup in <pot 1> is cooking, it will be ready after 17 timesteps; 3 counters can be visited by me. Their states are as follows: 1 counters have onion. 1 counters have dish. 1 counters are empty. 
Analysis: 
- player1 is holding nothing. 
- There is already an onion on the counter, so player1 cannot pickup onion. 
- There is already a dish on the counter, so player1 cannot pickup dish. 
so, player1 should wait. 
Plan for player1: "wait(1)" 
###